/*
 * Transactional API
 * # Introduction    This API is a service provided by [E-goi](www.e-goi.com) to send transactional messages.    Transactional Messaging is a 1-to-1 communication channel, usually from an organization directed to a specific consumer.   They can be triggered by:    * __Actions__ - The consumer interacts with the organization (ie.: online shopping);  * __Time__ - The consumer's actions are time-bounded by the organization (ie.: period of inactivity).    Because of the nature of these messages,   it is expected that the consumer is interested in the content of these messages.   Therefore, they have a different treatment from marketing messages, and have a higher acceptance and opening rate.    >DISCLAIMER  >  >Please notice that this platform is more delicate in regards to the nature and processing of its messages.  >  >It should NOT be used as a mean of mass marketing, scams, phishing or overall unruly behaviour.   >  >Failure to comply may lead to limitation of use and even termination of account.    ***
 *
 * OpenAPI spec version: V2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * CompleteEmailMessageResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-25T18:25:48.901062+01:00[Europe/Lisbon]")
public class CompleteEmailMessageResponse {
  @SerializedName("bcc")
  private List<String> bcc = null;

  @SerializedName("groupId")
  private Integer groupId = null;

  @SerializedName("textBody")
  private String textBody = null;

  @SerializedName("htmlBody")
  private String htmlBody = null;

  @SerializedName("templateId")
  private String templateId = null;

  @SerializedName("senderId")
  private Integer senderId = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("createDate")
  private OffsetDateTime createDate = null;

  @SerializedName("openTracking")
  private Boolean openTracking = null;

  @SerializedName("cc")
  private List<String> cc = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("unsubscribe")
  private Boolean unsubscribe = null;

  @SerializedName("subscriberId")
  private Integer subscriberId = null;

  @SerializedName("clickTracking")
  private Boolean clickTracking = null;

  @SerializedName("domainId")
  private Integer domainId = null;

  @SerializedName("replyToId")
  private Integer replyToId = null;

  @SerializedName("domain")
  private String domain = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("register")
  private Boolean register = null;

  public CompleteEmailMessageResponse bcc(List<String> bcc) {
    this.bcc = bcc;
    return this;
  }

  public CompleteEmailMessageResponse addBccItem(String bccItem) {
    if (this.bcc == null) {
      this.bcc = new ArrayList<String>();
    }
    this.bcc.add(bccItem);
    return this;
  }

   /**
   * Get bcc
   * @return bcc
  **/
  @Schema(description = "")
  public List<String> getBcc() {
    return bcc;
  }

  public void setBcc(List<String> bcc) {
    this.bcc = bcc;
  }

  public CompleteEmailMessageResponse groupId(Integer groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @Schema(description = "")
  public Integer getGroupId() {
    return groupId;
  }

  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }

  public CompleteEmailMessageResponse textBody(String textBody) {
    this.textBody = textBody;
    return this;
  }

   /**
   * Get textBody
   * @return textBody
  **/
  @Schema(description = "")
  public String getTextBody() {
    return textBody;
  }

  public void setTextBody(String textBody) {
    this.textBody = textBody;
  }

  public CompleteEmailMessageResponse htmlBody(String htmlBody) {
    this.htmlBody = htmlBody;
    return this;
  }

   /**
   * Get htmlBody
   * @return htmlBody
  **/
  @Schema(description = "")
  public String getHtmlBody() {
    return htmlBody;
  }

  public void setHtmlBody(String htmlBody) {
    this.htmlBody = htmlBody;
  }

  public CompleteEmailMessageResponse templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @Schema(description = "")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public CompleteEmailMessageResponse senderId(Integer senderId) {
    this.senderId = senderId;
    return this;
  }

   /**
   * Get senderId
   * @return senderId
  **/
  @Schema(description = "")
  public Integer getSenderId() {
    return senderId;
  }

  public void setSenderId(Integer senderId) {
    this.senderId = senderId;
  }

  public CompleteEmailMessageResponse id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CompleteEmailMessageResponse createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public CompleteEmailMessageResponse openTracking(Boolean openTracking) {
    this.openTracking = openTracking;
    return this;
  }

   /**
   * Get openTracking
   * @return openTracking
  **/
  @Schema(description = "")
  public Boolean isOpenTracking() {
    return openTracking;
  }

  public void setOpenTracking(Boolean openTracking) {
    this.openTracking = openTracking;
  }

  public CompleteEmailMessageResponse cc(List<String> cc) {
    this.cc = cc;
    return this;
  }

  public CompleteEmailMessageResponse addCcItem(String ccItem) {
    if (this.cc == null) {
      this.cc = new ArrayList<String>();
    }
    this.cc.add(ccItem);
    return this;
  }

   /**
   * Get cc
   * @return cc
  **/
  @Schema(description = "")
  public List<String> getCc() {
    return cc;
  }

  public void setCc(List<String> cc) {
    this.cc = cc;
  }

  public CompleteEmailMessageResponse subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @Schema(description = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public CompleteEmailMessageResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CompleteEmailMessageResponse unsubscribe(Boolean unsubscribe) {
    this.unsubscribe = unsubscribe;
    return this;
  }

   /**
   * Get unsubscribe
   * @return unsubscribe
  **/
  @Schema(description = "")
  public Boolean isUnsubscribe() {
    return unsubscribe;
  }

  public void setUnsubscribe(Boolean unsubscribe) {
    this.unsubscribe = unsubscribe;
  }

  public CompleteEmailMessageResponse subscriberId(Integer subscriberId) {
    this.subscriberId = subscriberId;
    return this;
  }

   /**
   * Get subscriberId
   * @return subscriberId
  **/
  @Schema(description = "")
  public Integer getSubscriberId() {
    return subscriberId;
  }

  public void setSubscriberId(Integer subscriberId) {
    this.subscriberId = subscriberId;
  }

  public CompleteEmailMessageResponse clickTracking(Boolean clickTracking) {
    this.clickTracking = clickTracking;
    return this;
  }

   /**
   * Get clickTracking
   * @return clickTracking
  **/
  @Schema(description = "")
  public Boolean isClickTracking() {
    return clickTracking;
  }

  public void setClickTracking(Boolean clickTracking) {
    this.clickTracking = clickTracking;
  }

  public CompleteEmailMessageResponse domainId(Integer domainId) {
    this.domainId = domainId;
    return this;
  }

   /**
   * Get domainId
   * @return domainId
  **/
  @Schema(description = "")
  public Integer getDomainId() {
    return domainId;
  }

  public void setDomainId(Integer domainId) {
    this.domainId = domainId;
  }

  public CompleteEmailMessageResponse replyToId(Integer replyToId) {
    this.replyToId = replyToId;
    return this;
  }

   /**
   * Get replyToId
   * @return replyToId
  **/
  @Schema(description = "")
  public Integer getReplyToId() {
    return replyToId;
  }

  public void setReplyToId(Integer replyToId) {
    this.replyToId = replyToId;
  }

  public CompleteEmailMessageResponse domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @Schema(description = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public CompleteEmailMessageResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CompleteEmailMessageResponse register(Boolean register) {
    this.register = register;
    return this;
  }

   /**
   * Get register
   * @return register
  **/
  @Schema(description = "")
  public Boolean isRegister() {
    return register;
  }

  public void setRegister(Boolean register) {
    this.register = register;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompleteEmailMessageResponse completeEmailMessageResponse = (CompleteEmailMessageResponse) o;
    return Objects.equals(this.bcc, completeEmailMessageResponse.bcc) &&
        Objects.equals(this.groupId, completeEmailMessageResponse.groupId) &&
        Objects.equals(this.textBody, completeEmailMessageResponse.textBody) &&
        Objects.equals(this.htmlBody, completeEmailMessageResponse.htmlBody) &&
        Objects.equals(this.templateId, completeEmailMessageResponse.templateId) &&
        Objects.equals(this.senderId, completeEmailMessageResponse.senderId) &&
        Objects.equals(this.id, completeEmailMessageResponse.id) &&
        Objects.equals(this.createDate, completeEmailMessageResponse.createDate) &&
        Objects.equals(this.openTracking, completeEmailMessageResponse.openTracking) &&
        Objects.equals(this.cc, completeEmailMessageResponse.cc) &&
        Objects.equals(this.subject, completeEmailMessageResponse.subject) &&
        Objects.equals(this.status, completeEmailMessageResponse.status) &&
        Objects.equals(this.unsubscribe, completeEmailMessageResponse.unsubscribe) &&
        Objects.equals(this.subscriberId, completeEmailMessageResponse.subscriberId) &&
        Objects.equals(this.clickTracking, completeEmailMessageResponse.clickTracking) &&
        Objects.equals(this.domainId, completeEmailMessageResponse.domainId) &&
        Objects.equals(this.replyToId, completeEmailMessageResponse.replyToId) &&
        Objects.equals(this.domain, completeEmailMessageResponse.domain) &&
        Objects.equals(this.name, completeEmailMessageResponse.name) &&
        Objects.equals(this.register, completeEmailMessageResponse.register);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bcc, groupId, textBody, htmlBody, templateId, senderId, id, createDate, openTracking, cc, subject, status, unsubscribe, subscriberId, clickTracking, domainId, replyToId, domain, name, register);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompleteEmailMessageResponse {\n");
    
    sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    textBody: ").append(toIndentedString(textBody)).append("\n");
    sb.append("    htmlBody: ").append(toIndentedString(htmlBody)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    openTracking: ").append(toIndentedString(openTracking)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    unsubscribe: ").append(toIndentedString(unsubscribe)).append("\n");
    sb.append("    subscriberId: ").append(toIndentedString(subscriberId)).append("\n");
    sb.append("    clickTracking: ").append(toIndentedString(clickTracking)).append("\n");
    sb.append("    domainId: ").append(toIndentedString(domainId)).append("\n");
    sb.append("    replyToId: ").append(toIndentedString(replyToId)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    register: ").append(toIndentedString(register)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
