/*
 * Transactional API
 * # Introduction    This API is a service provided by [E-goi](www.e-goi.com) to send transactional messages.    Transactional Messaging is a 1-to-1 communication channel, usually from an organization directed to a specific consumer.   They can be triggered by:    * __Actions__ - The consumer interacts with the organization (ie.: online shopping);  * __Time__ - The consumer's actions are time-bounded by the organization (ie.: period of inactivity).    Because of the nature of these messages,   it is expected that the consumer is interested in the content of these messages.   Therefore, they have a different treatment from marketing messages, and have a higher acceptance and opening rate.    >DISCLAIMER  >  >Please notice that this platform is more delicate in regards to the nature and processing of its messages.  >  >It should NOT be used as a mean of mass marketing, scams, phishing or overall unruly behaviour.   >  >Failure to comply may lead to limitation of use and even termination of account.    ***
 *
 * OpenAPI spec version: V2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EmailReportResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-25T18:25:48.901062+01:00[Europe/Lisbon]")
public class EmailReportResponse {
  @SerializedName("groupId")
  private String groupId = null;

  @SerializedName("groupName")
  private String groupName = null;

  @SerializedName("viewsTotal")
  private Integer viewsTotal = null;

  @SerializedName("viewsUnique")
  private Integer viewsUnique = null;

  @SerializedName("clicksTotal")
  private Integer clicksTotal = null;

  @SerializedName("clicksUnique")
  private Integer clicksUnique = null;

  @SerializedName("metricsTotal")
  private Integer metricsTotal = null;

  @SerializedName("metricsProcessed")
  private Integer metricsProcessed = null;

  @SerializedName("metricsSent")
  private Integer metricsSent = null;

  @SerializedName("eventRemoved")
  private Integer eventRemoved = null;

  @SerializedName("eventSoftBounce")
  private Integer eventSoftBounce = null;

  @SerializedName("eventHardBounce")
  private Integer eventHardBounce = null;

  @SerializedName("timePeriod")
  private String timePeriod = null;

  public EmailReportResponse groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @Schema(description = "")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public EmailReportResponse groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @Schema(description = "")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public EmailReportResponse viewsTotal(Integer viewsTotal) {
    this.viewsTotal = viewsTotal;
    return this;
  }

   /**
   * Get viewsTotal
   * @return viewsTotal
  **/
  @Schema(description = "")
  public Integer getViewsTotal() {
    return viewsTotal;
  }

  public void setViewsTotal(Integer viewsTotal) {
    this.viewsTotal = viewsTotal;
  }

  public EmailReportResponse viewsUnique(Integer viewsUnique) {
    this.viewsUnique = viewsUnique;
    return this;
  }

   /**
   * Get viewsUnique
   * @return viewsUnique
  **/
  @Schema(description = "")
  public Integer getViewsUnique() {
    return viewsUnique;
  }

  public void setViewsUnique(Integer viewsUnique) {
    this.viewsUnique = viewsUnique;
  }

  public EmailReportResponse clicksTotal(Integer clicksTotal) {
    this.clicksTotal = clicksTotal;
    return this;
  }

   /**
   * Get clicksTotal
   * @return clicksTotal
  **/
  @Schema(description = "")
  public Integer getClicksTotal() {
    return clicksTotal;
  }

  public void setClicksTotal(Integer clicksTotal) {
    this.clicksTotal = clicksTotal;
  }

  public EmailReportResponse clicksUnique(Integer clicksUnique) {
    this.clicksUnique = clicksUnique;
    return this;
  }

   /**
   * Get clicksUnique
   * @return clicksUnique
  **/
  @Schema(description = "")
  public Integer getClicksUnique() {
    return clicksUnique;
  }

  public void setClicksUnique(Integer clicksUnique) {
    this.clicksUnique = clicksUnique;
  }

  public EmailReportResponse metricsTotal(Integer metricsTotal) {
    this.metricsTotal = metricsTotal;
    return this;
  }

   /**
   * Get metricsTotal
   * @return metricsTotal
  **/
  @Schema(description = "")
  public Integer getMetricsTotal() {
    return metricsTotal;
  }

  public void setMetricsTotal(Integer metricsTotal) {
    this.metricsTotal = metricsTotal;
  }

  public EmailReportResponse metricsProcessed(Integer metricsProcessed) {
    this.metricsProcessed = metricsProcessed;
    return this;
  }

   /**
   * Get metricsProcessed
   * @return metricsProcessed
  **/
  @Schema(description = "")
  public Integer getMetricsProcessed() {
    return metricsProcessed;
  }

  public void setMetricsProcessed(Integer metricsProcessed) {
    this.metricsProcessed = metricsProcessed;
  }

  public EmailReportResponse metricsSent(Integer metricsSent) {
    this.metricsSent = metricsSent;
    return this;
  }

   /**
   * Get metricsSent
   * @return metricsSent
  **/
  @Schema(description = "")
  public Integer getMetricsSent() {
    return metricsSent;
  }

  public void setMetricsSent(Integer metricsSent) {
    this.metricsSent = metricsSent;
  }

  public EmailReportResponse eventRemoved(Integer eventRemoved) {
    this.eventRemoved = eventRemoved;
    return this;
  }

   /**
   * Get eventRemoved
   * @return eventRemoved
  **/
  @Schema(description = "")
  public Integer getEventRemoved() {
    return eventRemoved;
  }

  public void setEventRemoved(Integer eventRemoved) {
    this.eventRemoved = eventRemoved;
  }

  public EmailReportResponse eventSoftBounce(Integer eventSoftBounce) {
    this.eventSoftBounce = eventSoftBounce;
    return this;
  }

   /**
   * Get eventSoftBounce
   * @return eventSoftBounce
  **/
  @Schema(description = "")
  public Integer getEventSoftBounce() {
    return eventSoftBounce;
  }

  public void setEventSoftBounce(Integer eventSoftBounce) {
    this.eventSoftBounce = eventSoftBounce;
  }

  public EmailReportResponse eventHardBounce(Integer eventHardBounce) {
    this.eventHardBounce = eventHardBounce;
    return this;
  }

   /**
   * Get eventHardBounce
   * @return eventHardBounce
  **/
  @Schema(description = "")
  public Integer getEventHardBounce() {
    return eventHardBounce;
  }

  public void setEventHardBounce(Integer eventHardBounce) {
    this.eventHardBounce = eventHardBounce;
  }

  public EmailReportResponse timePeriod(String timePeriod) {
    this.timePeriod = timePeriod;
    return this;
  }

   /**
   * Get timePeriod
   * @return timePeriod
  **/
  @Schema(description = "")
  public String getTimePeriod() {
    return timePeriod;
  }

  public void setTimePeriod(String timePeriod) {
    this.timePeriod = timePeriod;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailReportResponse emailReportResponse = (EmailReportResponse) o;
    return Objects.equals(this.groupId, emailReportResponse.groupId) &&
        Objects.equals(this.groupName, emailReportResponse.groupName) &&
        Objects.equals(this.viewsTotal, emailReportResponse.viewsTotal) &&
        Objects.equals(this.viewsUnique, emailReportResponse.viewsUnique) &&
        Objects.equals(this.clicksTotal, emailReportResponse.clicksTotal) &&
        Objects.equals(this.clicksUnique, emailReportResponse.clicksUnique) &&
        Objects.equals(this.metricsTotal, emailReportResponse.metricsTotal) &&
        Objects.equals(this.metricsProcessed, emailReportResponse.metricsProcessed) &&
        Objects.equals(this.metricsSent, emailReportResponse.metricsSent) &&
        Objects.equals(this.eventRemoved, emailReportResponse.eventRemoved) &&
        Objects.equals(this.eventSoftBounce, emailReportResponse.eventSoftBounce) &&
        Objects.equals(this.eventHardBounce, emailReportResponse.eventHardBounce) &&
        Objects.equals(this.timePeriod, emailReportResponse.timePeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupId, groupName, viewsTotal, viewsUnique, clicksTotal, clicksUnique, metricsTotal, metricsProcessed, metricsSent, eventRemoved, eventSoftBounce, eventHardBounce, timePeriod);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailReportResponse {\n");
    
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    viewsTotal: ").append(toIndentedString(viewsTotal)).append("\n");
    sb.append("    viewsUnique: ").append(toIndentedString(viewsUnique)).append("\n");
    sb.append("    clicksTotal: ").append(toIndentedString(clicksTotal)).append("\n");
    sb.append("    clicksUnique: ").append(toIndentedString(clicksUnique)).append("\n");
    sb.append("    metricsTotal: ").append(toIndentedString(metricsTotal)).append("\n");
    sb.append("    metricsProcessed: ").append(toIndentedString(metricsProcessed)).append("\n");
    sb.append("    metricsSent: ").append(toIndentedString(metricsSent)).append("\n");
    sb.append("    eventRemoved: ").append(toIndentedString(eventRemoved)).append("\n");
    sb.append("    eventSoftBounce: ").append(toIndentedString(eventSoftBounce)).append("\n");
    sb.append("    eventHardBounce: ").append(toIndentedString(eventHardBounce)).append("\n");
    sb.append("    timePeriod: ").append(toIndentedString(timePeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
