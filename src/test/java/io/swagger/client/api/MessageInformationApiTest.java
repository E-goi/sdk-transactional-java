/*
 * Transactional API
 * # Introduction    This API is a service provided by [E-goi](www.e-goi.com) to send transactional messages.    Transactional Messaging is a 1-to-1 communication channel, usually from an organization directed to a specific consumer.   They can be triggered by:    * __Actions__ - The consumer interacts with the organization (ie.: online shopping);  * __Time__ - The consumer's actions are time-bounded by the organization (ie.: period of inactivity).    Because of the nature of these messages,   it is expected that the consumer is interested in the content of these messages.   Therefore, they have a different treatment from marketing messages, and have a higher acceptance and opening rate.    >DISCLAIMER  >  >Please notice that this platform is more delicate in regards to the nature and processing of its messages.  >  >It should NOT be used as a mean of mass marketing, scams, phishing or overall unruly behaviour.   >  >Failure to comply may lead to limitation of use and even termination of account.    ***
 *
 * OpenAPI spec version: V2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CompleteEmailMessageResponse;
import io.swagger.client.model.CompleteSmsMessageResponse;
import io.swagger.client.model.Error401;
import io.swagger.client.model.Error403;
import io.swagger.client.model.Error404;
import io.swagger.client.model.Error500;
import io.swagger.client.model.ErrorGenericResponse;
import io.swagger.client.model.PartialEmailMessageResponse;
import io.swagger.client.model.PartialSmsMessageResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessageInformationApi
 */
@Ignore
public class MessageInformationApiTest {

    private final MessageInformationApi api = new MessageInformationApi();

    /**
     * Get All Email Messages
     *
     * Retrieve the list of all sms messages. Results can be filtered by messages ids, group or channel. The result will be a combination of all parameters present
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAllEmailMessagesTest() throws ApiException {
        String group = null;
        String dateStart = null;
        String dateEnd = null;
        String destination = null;
        String status = null;
        List<PartialEmailMessageResponse> response = api.listAllEmailMessages(group, dateStart, dateEnd, destination, status);

        // TODO: test validations
    }
    /**
     * Get All Sms Messages
     *
     * Retrieve the list of all sms messages. Results can be filtered by messages ids, group or channel. The result will be a combination of all parameters present
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAllSmsMessagesTest() throws ApiException {
        String group = null;
        String dateStart = null;
        String dateEnd = null;
        String destination = null;
        String status = null;
        List<PartialSmsMessageResponse> response = api.listAllSmsMessages(group, dateStart, dateEnd, destination, status);

        // TODO: test validations
    }
    /**
     * Get Single Email Messages
     *
     * Retrieve the message with the id from path
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSingleEmailMessageTest() throws ApiException {
        Integer id = null;
        CompleteEmailMessageResponse response = api.listSingleEmailMessage(id);

        // TODO: test validations
    }
    /**
     * Get Single Sms Messages
     *
     * Retrieve the message with the id from path
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSingleSmsMessageTest() throws ApiException {
        Integer id = null;
        CompleteSmsMessageResponse response = api.listSingleSmsMessage(id);

        // TODO: test validations
    }
}
