/*
 * Transactional API
 * # Introduction    This API is a service provided by [E-goi](www.e-goi.com) to send transactional messages.    Transactional Messaging is a 1-to-1 communication channel, usually from an organization directed to a specific consumer.   They can be triggered by:    * __Actions__ - The consumer interacts with the organization (ie.: online shopping);  * __Time__ - The consumer's actions are time-bounded by the organization (ie.: period of inactivity).    Because of the nature of these messages,   it is expected that the consumer is interested in the content of these messages.   Therefore, they have a different treatment from marketing messages, and have a higher acceptance and opening rate.    >DISCLAIMER  >  >Please notice that this platform is more delicate in regards to the nature and processing of its messages.  >  >It should NOT be used as a mean of mass marketing, scams, phishing or overall unruly behaviour.   >  >Failure to comply may lead to limitation of use and even termination of account.    ***
 *
 * OpenAPI spec version: V2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SmsReportResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-25T18:24:45.836079+01:00[Europe/Lisbon]")
public class SmsReportResponse {
  @SerializedName("groupId")
  private String groupId = null;

  @SerializedName("groupName")
  private String groupName = null;

  @SerializedName("metricsTotal")
  private Integer metricsTotal = null;

  @SerializedName("metricsTotalParts")
  private Integer metricsTotalParts = null;

  @SerializedName("metricsProcessed")
  private Integer metricsProcessed = null;

  @SerializedName("metricsSent")
  private Integer metricsSent = null;

  @SerializedName("metricsSentParts")
  private Integer metricsSentParts = null;

  @SerializedName("metricsDelivered")
  private Integer metricsDelivered = null;

  @SerializedName("metricsDeliveredParts")
  private Integer metricsDeliveredParts = null;

  @SerializedName("metricsRejected")
  private Integer metricsRejected = null;

  @SerializedName("metricsRejectedParts")
  private Integer metricsRejectedParts = null;

  @SerializedName("timePeriod")
  private String timePeriod = null;

  public SmsReportResponse groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @Schema(description = "")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public SmsReportResponse groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @Schema(description = "")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public SmsReportResponse metricsTotal(Integer metricsTotal) {
    this.metricsTotal = metricsTotal;
    return this;
  }

   /**
   * Get metricsTotal
   * @return metricsTotal
  **/
  @Schema(description = "")
  public Integer getMetricsTotal() {
    return metricsTotal;
  }

  public void setMetricsTotal(Integer metricsTotal) {
    this.metricsTotal = metricsTotal;
  }

  public SmsReportResponse metricsTotalParts(Integer metricsTotalParts) {
    this.metricsTotalParts = metricsTotalParts;
    return this;
  }

   /**
   * Get metricsTotalParts
   * @return metricsTotalParts
  **/
  @Schema(description = "")
  public Integer getMetricsTotalParts() {
    return metricsTotalParts;
  }

  public void setMetricsTotalParts(Integer metricsTotalParts) {
    this.metricsTotalParts = metricsTotalParts;
  }

  public SmsReportResponse metricsProcessed(Integer metricsProcessed) {
    this.metricsProcessed = metricsProcessed;
    return this;
  }

   /**
   * Get metricsProcessed
   * @return metricsProcessed
  **/
  @Schema(description = "")
  public Integer getMetricsProcessed() {
    return metricsProcessed;
  }

  public void setMetricsProcessed(Integer metricsProcessed) {
    this.metricsProcessed = metricsProcessed;
  }

  public SmsReportResponse metricsSent(Integer metricsSent) {
    this.metricsSent = metricsSent;
    return this;
  }

   /**
   * Get metricsSent
   * @return metricsSent
  **/
  @Schema(description = "")
  public Integer getMetricsSent() {
    return metricsSent;
  }

  public void setMetricsSent(Integer metricsSent) {
    this.metricsSent = metricsSent;
  }

  public SmsReportResponse metricsSentParts(Integer metricsSentParts) {
    this.metricsSentParts = metricsSentParts;
    return this;
  }

   /**
   * Get metricsSentParts
   * @return metricsSentParts
  **/
  @Schema(description = "")
  public Integer getMetricsSentParts() {
    return metricsSentParts;
  }

  public void setMetricsSentParts(Integer metricsSentParts) {
    this.metricsSentParts = metricsSentParts;
  }

  public SmsReportResponse metricsDelivered(Integer metricsDelivered) {
    this.metricsDelivered = metricsDelivered;
    return this;
  }

   /**
   * Get metricsDelivered
   * @return metricsDelivered
  **/
  @Schema(description = "")
  public Integer getMetricsDelivered() {
    return metricsDelivered;
  }

  public void setMetricsDelivered(Integer metricsDelivered) {
    this.metricsDelivered = metricsDelivered;
  }

  public SmsReportResponse metricsDeliveredParts(Integer metricsDeliveredParts) {
    this.metricsDeliveredParts = metricsDeliveredParts;
    return this;
  }

   /**
   * Get metricsDeliveredParts
   * @return metricsDeliveredParts
  **/
  @Schema(description = "")
  public Integer getMetricsDeliveredParts() {
    return metricsDeliveredParts;
  }

  public void setMetricsDeliveredParts(Integer metricsDeliveredParts) {
    this.metricsDeliveredParts = metricsDeliveredParts;
  }

  public SmsReportResponse metricsRejected(Integer metricsRejected) {
    this.metricsRejected = metricsRejected;
    return this;
  }

   /**
   * Get metricsRejected
   * @return metricsRejected
  **/
  @Schema(description = "")
  public Integer getMetricsRejected() {
    return metricsRejected;
  }

  public void setMetricsRejected(Integer metricsRejected) {
    this.metricsRejected = metricsRejected;
  }

  public SmsReportResponse metricsRejectedParts(Integer metricsRejectedParts) {
    this.metricsRejectedParts = metricsRejectedParts;
    return this;
  }

   /**
   * Get metricsRejectedParts
   * @return metricsRejectedParts
  **/
  @Schema(description = "")
  public Integer getMetricsRejectedParts() {
    return metricsRejectedParts;
  }

  public void setMetricsRejectedParts(Integer metricsRejectedParts) {
    this.metricsRejectedParts = metricsRejectedParts;
  }

  public SmsReportResponse timePeriod(String timePeriod) {
    this.timePeriod = timePeriod;
    return this;
  }

   /**
   * Get timePeriod
   * @return timePeriod
  **/
  @Schema(description = "")
  public String getTimePeriod() {
    return timePeriod;
  }

  public void setTimePeriod(String timePeriod) {
    this.timePeriod = timePeriod;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmsReportResponse smsReportResponse = (SmsReportResponse) o;
    return Objects.equals(this.groupId, smsReportResponse.groupId) &&
        Objects.equals(this.groupName, smsReportResponse.groupName) &&
        Objects.equals(this.metricsTotal, smsReportResponse.metricsTotal) &&
        Objects.equals(this.metricsTotalParts, smsReportResponse.metricsTotalParts) &&
        Objects.equals(this.metricsProcessed, smsReportResponse.metricsProcessed) &&
        Objects.equals(this.metricsSent, smsReportResponse.metricsSent) &&
        Objects.equals(this.metricsSentParts, smsReportResponse.metricsSentParts) &&
        Objects.equals(this.metricsDelivered, smsReportResponse.metricsDelivered) &&
        Objects.equals(this.metricsDeliveredParts, smsReportResponse.metricsDeliveredParts) &&
        Objects.equals(this.metricsRejected, smsReportResponse.metricsRejected) &&
        Objects.equals(this.metricsRejectedParts, smsReportResponse.metricsRejectedParts) &&
        Objects.equals(this.timePeriod, smsReportResponse.timePeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupId, groupName, metricsTotal, metricsTotalParts, metricsProcessed, metricsSent, metricsSentParts, metricsDelivered, metricsDeliveredParts, metricsRejected, metricsRejectedParts, timePeriod);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmsReportResponse {\n");
    
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    metricsTotal: ").append(toIndentedString(metricsTotal)).append("\n");
    sb.append("    metricsTotalParts: ").append(toIndentedString(metricsTotalParts)).append("\n");
    sb.append("    metricsProcessed: ").append(toIndentedString(metricsProcessed)).append("\n");
    sb.append("    metricsSent: ").append(toIndentedString(metricsSent)).append("\n");
    sb.append("    metricsSentParts: ").append(toIndentedString(metricsSentParts)).append("\n");
    sb.append("    metricsDelivered: ").append(toIndentedString(metricsDelivered)).append("\n");
    sb.append("    metricsDeliveredParts: ").append(toIndentedString(metricsDeliveredParts)).append("\n");
    sb.append("    metricsRejected: ").append(toIndentedString(metricsRejected)).append("\n");
    sb.append("    metricsRejectedParts: ").append(toIndentedString(metricsRejectedParts)).append("\n");
    sb.append("    timePeriod: ").append(toIndentedString(timePeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
