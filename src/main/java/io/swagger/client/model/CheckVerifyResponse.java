/*
 * Transactional API
 * # Introduction    This API is a service provided by [E-goi](www.e-goi.com) to send transactional messages.    Transactional Messaging is a 1-to-1 communication channel, usually from an organization directed to a specific consumer.   They can be triggered by:    * __Actions__ - The consumer interacts with the organization (ie.: online shopping);  * __Time__ - The consumer's actions are time-bounded by the organization (ie.: period of inactivity).    Because of the nature of these messages,   it is expected that the consumer is interested in the content of these messages.   Therefore, they have a different treatment from marketing messages, and have a higher acceptance and opening rate.    >DISCLAIMER  >  >Please notice that this platform is more delicate in regards to the nature and processing of its messages.  >  >It should NOT be used as a mean of mass marketing, scams, phishing or overall unruly behaviour.   >  >Failure to comply may lead to limitation of use and even termination of account.    ***
 *
 * OpenAPI spec version: V2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CheckVerifyResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-25T18:24:45.836079+01:00[Europe/Lisbon]")
public class CheckVerifyResponse {
  @SerializedName("id")
  private String id = null;

  @SerializedName("messageId")
  private String messageId = null;

  @SerializedName("senderId")
  private String senderId = null;

  @SerializedName("recipientNumber")
  private String recipientNumber = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("codeTTL")
  private Integer codeTTL = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("createDate")
  private String createDate = null;

  @SerializedName("message")
  private String message = null;

  public CheckVerifyResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the request.
   * @return id
  **/
  @Schema(example = "1234", description = "The id of the request.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CheckVerifyResponse messageId(String messageId) {
    this.messageId = messageId;
    return this;
  }

   /**
   * The id of the message.
   * @return messageId
  **/
  @Schema(example = "1234", description = "The id of the message.")
  public String getMessageId() {
    return messageId;
  }

  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }

  public CheckVerifyResponse senderId(String senderId) {
    this.senderId = senderId;
    return this;
  }

   /**
   * The id of the sender.
   * @return senderId
  **/
  @Schema(example = "1234", description = "The id of the sender.")
  public String getSenderId() {
    return senderId;
  }

  public void setSenderId(String senderId) {
    this.senderId = senderId;
  }

  public CheckVerifyResponse recipientNumber(String recipientNumber) {
    this.recipientNumber = recipientNumber;
    return this;
  }

   /**
   * The phone number of the recipient.
   * @return recipientNumber
  **/
  @Schema(example = "351-987654321", description = "The phone number of the recipient.")
  public String getRecipientNumber() {
    return recipientNumber;
  }

  public void setRecipientNumber(String recipientNumber) {
    this.recipientNumber = recipientNumber;
  }

  public CheckVerifyResponse code(String code) {
    this.code = code;
    return this;
  }

   /**
   * The code sent to the phone number.
   * @return code
  **/
  @Schema(example = "1234", description = "The code sent to the phone number.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public CheckVerifyResponse codeTTL(Integer codeTTL) {
    this.codeTTL = codeTTL;
    return this;
  }

   /**
   * The time in seconds the code was valid.
   * @return codeTTL
  **/
  @Schema(example = "600", description = "The time in seconds the code was valid.")
  public Integer getCodeTTL() {
    return codeTTL;
  }

  public void setCodeTTL(Integer codeTTL) {
    this.codeTTL = codeTTL;
  }

  public CheckVerifyResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The statues of the verify request.
   * @return status
  **/
  @Schema(example = "pending", description = "The statues of the verify request.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CheckVerifyResponse createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * The date the verify was requested.
   * @return createDate
  **/
  @Schema(example = "2020-03-06T11:57:34Z", description = "The date the verify was requested.")
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }

  public CheckVerifyResponse message(String message) {
    this.message = message;
    return this;
  }

   /**
   * the message sent to the recipient.
   * @return message
  **/
  @Schema(example = "Here is your code: {CODE}", description = "the message sent to the recipient.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckVerifyResponse checkVerifyResponse = (CheckVerifyResponse) o;
    return Objects.equals(this.id, checkVerifyResponse.id) &&
        Objects.equals(this.messageId, checkVerifyResponse.messageId) &&
        Objects.equals(this.senderId, checkVerifyResponse.senderId) &&
        Objects.equals(this.recipientNumber, checkVerifyResponse.recipientNumber) &&
        Objects.equals(this.code, checkVerifyResponse.code) &&
        Objects.equals(this.codeTTL, checkVerifyResponse.codeTTL) &&
        Objects.equals(this.status, checkVerifyResponse.status) &&
        Objects.equals(this.createDate, checkVerifyResponse.createDate) &&
        Objects.equals(this.message, checkVerifyResponse.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, messageId, senderId, recipientNumber, code, codeTTL, status, createDate, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckVerifyResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    recipientNumber: ").append(toIndentedString(recipientNumber)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    codeTTL: ").append(toIndentedString(codeTTL)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
